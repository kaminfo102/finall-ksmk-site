generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model HeroSlider {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  imageUrl    String
  link        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Course {
  id          Int       @id @default(autoincrement())
  title       String
  summary     String
  content     String
  imageUrl    String
  views       Int       @default(0)
  likes       Int       @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  enrollments Enrollment[]
}

model Gallery {
  id          Int      @id @default(autoincrement())
  title       String
  imageUrl    String
  description String?
  createdAt   DateTime @default(now())
}

model Contact {
  id          Int      @id @default(autoincrement())
  firstName   String
  lastName    String
  phone       String
  city        String
  message     String
  createdAt   DateTime @default(now())
}

model Event {
  id            Int           @id @default(autoincrement())
  title         String
  description   String
  content       String?
  imageUrl      String
  date          DateTime
  location      String
  capacity      Int
  price         Int?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  registrations Registration[]
  studentRegistrations StudentEventRegistration[]
  images        EventImage[]
}

model EventImage {
  id        Int      @id @default(autoincrement())
  url       String
  eventId   Int
  event     Event    @relation(fields: [eventId], references: [id])
  createdAt DateTime @default(now())
}

model Registration {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  phone     String
  email     String
  eventId   Int
  event     Event    @relation(fields: [eventId], references: [id])
  createdAt DateTime @default(now())
}

model Student {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  email     String    @unique
  password  String
  phone     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  enrollments Enrollment[]
  eventRegistrations StudentEventRegistration[]
}

model Enrollment {
  id        Int      @id @default(autoincrement())
  studentId Int
  courseId  Int
  student   Student  @relation(fields: [studentId], references: [id])
  course    Course   @relation(fields: [courseId], references: [id])
  enrolledAt DateTime @default(now())
  progress  Int      @default(0) // 0-100 percentage

  @@unique([studentId, courseId])
}

model StudentEventRegistration {
  id        Int      @id @default(autoincrement())
  studentId Int
  eventId   Int
  student   Student  @relation(fields: [studentId], references: [id])
  event     Event    @relation(fields: [eventId], references: [id])
  registeredAt DateTime @default(now())
  status    String   @default("pending") // pending, confirmed, cancelled

  @@unique([studentId, eventId])
}